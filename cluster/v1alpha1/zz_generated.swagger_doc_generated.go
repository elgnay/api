package v1alpha1

// This file contains a collection of methods that can be used from go-restful to
// generate Swagger API documentation for its models. Please read this PR for more
// information on the implementation: https://github.com/emicklei/go-restful/pull/215
//
// TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
// they are on one line! For multiple line or blocks that you want to ignore use ---.
// Any context after a --- is ignored.
//
// Those methods can be generated by using hack/update-swagger-docs.sh

// AUTO-GENERATED FUNCTIONS START HERE
var map_ManagedClusterClaim = map[string]string{
	"":       "ManagedClusterClaim is a user's request for and claim to a managed cluster. It is defined as an ownership claim of a managed cluster in a namespace.",
	"spec":   "Spec defines the managed cluster requested by the claim",
	"status": "Status represents the current status of the claim",
}

func (ManagedClusterClaim) SwaggerDoc() map[string]string {
	return map_ManagedClusterClaim
}

var map_ManagedClusterClaimCondition = map[string]string{
	"":                   "ManagedClusterClaimCondition represents the current condition of ManagedCluster claim",
	"type":               "Type is the type of the ManagedClusterClaim condition.",
	"status":             "Status is the status of the condition. One of True, False, Unknown.",
	"lastTransitionTime": "LastTransitionTime is the last time the condition changed from one status to another.",
	"reason":             "Reason is a (brief) reason for the condition's last status change.",
	"message":            "Message is a human-readable message indicating details about the last status change.",
}

func (ManagedClusterClaimCondition) SwaggerDoc() map[string]string {
	return map_ManagedClusterClaimCondition
}

var map_ManagedClusterClaimList = map[string]string{
	"":         "ManagedClusterClaimList is a collection of ManagedClusterClaims.",
	"metadata": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
	"items":    "Items is a list of ManagedClusterClaims.",
}

func (ManagedClusterClaimList) SwaggerDoc() map[string]string {
	return map_ManagedClusterClaimList
}

var map_ManagedClusterClaimSpec = map[string]string{
	"":            "ManagedClusterClaimSpec describes the common attributes of managed cluster",
	"selector":    "A label query over managed clusters to consider for binding. This selector is ignored when ClusterName is set",
	"clusterName": "ClusterName is used to match a concrete managed cluster for this claim. When set to non-empty value Selector is not evaluated",
}

func (ManagedClusterClaimSpec) SwaggerDoc() map[string]string {
	return map_ManagedClusterClaimSpec
}

var map_ManagedClusterClaimStatus = map[string]string{
	"":            "ManagedClusterClaimStatus represents the status of ManagedCluster claim",
	"clusterName": "ClusterName is the binding reference to the ManagedCluster backing this claim",
}

func (ManagedClusterClaimStatus) SwaggerDoc() map[string]string {
	return map_ManagedClusterClaimStatus
}

var map_MirroredManagedCluster = map[string]string{
	"":       "MirroredManagedCluster is a mirror of a managed cluster in namespace scope. It is ready only and keeps synced with the managed cluster it mirrored.",
	"spec":   "Spec represents a desired configuration for the agent on the managed cluster.",
	"status": "Status represents the current status of joined managed cluster",
}

func (MirroredManagedCluster) SwaggerDoc() map[string]string {
	return map_MirroredManagedCluster
}

var map_MirroredManagedClusterList = map[string]string{
	"":         "MirroredManagedClusterList is a collection of mirrored managed clusters.",
	"metadata": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
	"items":    "Items is a list of mirrored managed clusters.",
}

func (MirroredManagedClusterList) SwaggerDoc() map[string]string {
	return map_MirroredManagedClusterList
}

// AUTO-GENERATED FUNCTIONS END HERE
